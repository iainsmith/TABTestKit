
name: TABTestKit CI

on:
  workflow_dispatch: # This allows you to manually run the workflow from GitHub's web UI
  pull_request:
    branches: [ '*' ] # This means this workflow will run when any PR is created or any changes are pushed to a PR, on any branch

jobs:
#   test_xcode10_ios12:
#     name: Run tests on Xcode 10 and iOS 12
#     runs-on: macOS-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Set Xcode version to 10.3
#         run: sudo xcode-select -switch /Applications/Xcode_10.3.app
#       - name: Build for testing
#         run: xcodebuild build-for-testing -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone Xs,OS=12.4'
#       - name: Test on iPhone Xs
#         run: xcodebuild test-without-building -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone Xs,OS=12.4'
#       - name: Archive tests results
#         if: ${{ failure() }}
#         uses: actions/upload-artifact@v2
#         with:
#           name: Test-TABTestKit-Xcode10-iOS12.xcresult
#           path: /Users/runner/Library/Developer/Xcode/DerivedData/*/Logs/Test/*.xcresult

#   test_xcode11_ios13:
#     name: Run tests on Xcode 11 and iOS 13
#     runs-on: macOS-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - name: Set Xcode version to 11.7
#         run: sudo xcode-select -switch /Applications/Xcode_11.7.app
#       - name: Build for testing
#         run: xcodebuild build-for-testing -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone 11,OS=13.7'
#       - name: Test on iPhone 11
#         run: xcodebuild test-without-building -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone 11,OS=13.7'
#       - name: Archive tests results
#         if: ${{ failure() }}
#         uses: actions/upload-artifact@v2
#         with:
#           name: Test-TABTestKit-Xcode11-iOS13.xcresult
#           path: /Users/runner/Library/Developer/Xcode/DerivedData/*/Logs/Test/*.xcresult

#   test_xcode12_ios14:
#     name: Run tests on Xcode 12 and iOS 14
#     runs-on: macOS-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v1
#       - name: Set Xcode version to 12.1
#         run: sudo xcode-select -switch /Applications/Xcode_12.1.app
#       - name: Build for testing
#         run: xcodebuild build-for-testing -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone 11,OS=14.1'
#       - name: Test on iPhone 11
#         run: xcodebuild test-without-building -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone 11,OS=14.1'
#       - name: Archive tests results
#         if: ${{ failure() }}
#         uses: actions/upload-artifact@v2
#         with:
#           name: Test-TABTestKit-Xcode12.1-iOS14.xcresult
#           path: /Users/runner/Library/Developer/Xcode/DerivedData/*/Logs/Test/*.xcresult
  test_xcode12_ios12_13_14:
    name: Run tests on Xcode 12 and iOS 13/14
    runs-on: macOS-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Xcode version to 12.2
        run: sudo xcode-select -switch /Applications/Xcode_12.2.app
      - name: Link to 13.7 Simulators
        run: |
              echo "Creating Runtimes folder if needed..."
              sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
              echo "Creating symlink of the iOS 13.7 runtime..."
              sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.7.simruntime
      - name: Build for testing on iOS 13.7
        run: xcodebuild build-for-testing -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone 11,OS=13.7'
      - name: Test on iPhone 11 on iOS 13.7
        run: xcodebuild test-without-building -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone 11,OS=13.7'
      - name: Build for testing for iOS 14.2
        run: xcodebuild build-for-testing -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone 11,OS=14.2'
      - name: Test on iPhone 11 with iOS 14.2
        run: xcodebuild test-without-building -workspace Example/TABTestKit.xcworkspace -scheme TABTestKit-Example -destination 'platform=iOS Simulator,name=iPhone 11,OS=14.2'
      - name: Archive tests results
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Test-TABTestKit-Xcode12.2-iOS13-14.xcresult
          path: /Users/runner/Library/Developer/Xcode/DerivedData/*/Logs/Test/*.xcresult
          
  build_spm:
    name: Ensure Swift Package Manager builds
    runs-on: macOS-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Xcode version to 11.7
        run: sudo xcode-select -switch /Applications/Xcode_11.7.app
      - name: Build Swift Package Manager
        run: xcodebuild -workspace package.xcworkspace -scheme TABTestKit -destination 'platform=iOS Simulator,name=iPhone 11,OS=13.7'
      - name: Set Xcode version to 12.1
        run: sudo xcode-select -switch /Applications/Xcode_12.1.app
      - name: Build Swift Package Manager
        run: xcodebuild -workspace package.xcworkspace -scheme TABTestKit -destination 'platform=iOS Simulator,name=iPhone 11,OS=14.1'

  build_carthage:
    name: Ensure Carthage builds
    runs-on: macOS-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Xcode version to 11.7
        run: sudo xcode-select -switch /Applications/Xcode_11.7.app
      - name: Build Carthage
        run: carthage build --archive
      - name: Set Xcode version to 12.1
        run: sudo xcode-select -switch /Applications/Xcode_12.1.app
      - name: Build Carthage
        run: ./carthage.sh build --archive

  build_cocoapods:
    name: Ensure Cocoapods builds
    runs-on: macOS-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Cocoapods
        run: pod lib lint --verbose
      - name: Set Xcode version to 11.7
        run: sudo xcode-select -switch /Applications/Xcode_11.7.app
      - name: Build Cocoapods
        run: pod lib lint --verbose
      - name: Set Xcode version to 12.1
        run: sudo xcode-select -switch /Applications/Xcode_12.1.app
      - name: Build Cocoapods
        run: pod lib lint --verbose --allow-warnings
